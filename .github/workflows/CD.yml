name: CD

on:
  push:
  pull_request:
    branches: [ "dev" ]

jobs:
  build_net:
    strategy:
      matrix:
        configuration: [Release]

    name: Build NET
    runs-on: windows-latest  
    environment: dev
    
    env:
      Solution_Name: minibank2.sln

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 6.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    # Execute all unit tests in the solution
    #- name: Execute unit tests
    #  run: dotnet test

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    # Create the app by building
    - name: Create the app
      run: msbuild $env:Solution_Name /t:Restore /t:rebuild
      env:
        Appx_Bundle: Always
        Appx_Bundle_Platforms: x86|x64
        Appx_Package_Build_Mode: StoreUpload
        Configuration: ${{ matrix.configuration }}
    
  build_image:
    name: Build Images
    runs-on: ubuntu-latest
    environment: dev
    needs: build_net
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Login to Dockerhub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} 

    - name: Setup Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Image Client-Api
      uses: docker/build-push-action@v3
      with:
        context: ./minibank_client_api
        file: ./minibank_client_api/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/deploy-client_api:latest

    - name: Build Image Account-Api
      uses: docker/build-push-action@v3
      with:
        context: ./minibank_account_api
        file: ./minibank_account_api/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/deploy-account_api:latest

  
  deploy_image:
    name: Deploy
    runs-on: ubuntu-latest
    environment: dev
    needs: [build_net, build_image]
    
    steps:
    - name: executing remote ssh commands on VM
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST_VM }}
        username: minibank
        key: ${{ secrets.SSH_PRIVATE_KEY_VM }}
        passphrase: anilena
        script: |
                    cd /opt/minibank
                    docker-compose down
                    docker-compose up -d
     
